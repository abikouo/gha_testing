---
name: splitter

concurrency:
  group: '${{ github.workflow }} @ ${{ github.sha }}'
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      repository:
        description: repository
        required: true
      ref:
        description: The reference branch/tag/sha to checkout
        required: true
      base_ref:
        description: The base reference
        required: true

jobs:
  check:
    runs-on: ubuntu-latest
    name: ansible test splitter
    env:
      source_dir: "source"
    outputs:
      test_targets: ${{ steps.display.outputs.test_targets }}
    steps:
      - name: Checkout the collection repository
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repository }}
          ref: ${{ inputs.ref }}
          fetch-depth: "0"
          path: ${{ env.source_dir }}

      - name: List changes for pull request
        id: splitter
        uses: abikouo/github_actions/.github/actions/ansible_test_splitter@splitter_for_roles
        with:
          collections_to_test: ${{ env.source_dir }}
          total_jobs: 3
          base_ref: main

      - name: Display targets
        id: display
        run: echo "test_targets=${{ steps.splitter.outputs.test_targets }}" >> $GITHUB_OUTPUT
        shell: bash
  run:
    runs-on: ubuntu-latest
    needs:
      - check
    env:
      test_targets: ${{ needs.check.outputs.test_targets }}
      test_prefix: "cloud.aws_ops-${{ matrix.workflow-id }}"
    strategy:
      fail-fast: false
      matrix:
        workflow-id: ['1', '2', '3']
    name: "run-${{ matrix.workflow-id }}"
    if: ${{ contains(env.test_targets, env.test_prefix) }}
    steps:
      - name: Read ansible-test targets
        id: read-targets
        run: |
          import os
          workflow_test_prefix = "cloud.aws_ops-{0}:".format(os.environ.get('TEST_WORKFLOW_ID'))
          for item in os.environ.get('TEST_TARGETS').split(';'):
              print("item => ", item)
              if item.startswith(workflow_test_prefix):
                  targets=' '.join(item.split(':', maxsplit=1)[1].split(','))
                  output_path = os.environ.get('GITHUB_OUTPUT')
                  with open(output_path, "a", encoding="utf-8") as fw:
                      fw.write(f"ansible_test_targets={targets}\n")
        shell: python
        env:
          TEST_WORKFLOW_ID: "${{ matrix.workflow-id }}"
          TEST_TARGETS: "${{ env.test_targets }}"

      - name: Checkout collection
        run: echo '${{ steps.read-targets.outputs.ansible_test_targets }}'
        shell: bash