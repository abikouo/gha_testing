---
name: splitter

concurrency:
  group: '${{ github.workflow }} @ ${{ github.sha }}'
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      repository:
        description: repository
        required: true
      ref:
        description: The reference branch/tag/sha to checkout
        required: true
      base_ref:
        description: The base reference
        required: true

jobs:
  test_splitter:
    runs-on: ubuntu-latest
    name: ansible test splitter
    env:
      source_dir: "source"
    outputs:
      test_targets: ${{ steps.splitter.outputs.test_targets }}
      test_targets_json: ${{ steps.splitter.outputs.test_targets_json }}
      test_jobs: ${{ steps.splitter.outputs.test_jobs }}
    steps:
      - name: Checkout the collection repository
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repository }}
          ref: ${{ inputs.ref }}
          fetch-depth: "0"
          path: ${{ env.source_dir }}

      - name: List changes for pull request
        id: splitter
        uses: abikouo/github_actions/.github/actions/ansible_test_splitter@test_splitter_07202023
        with:
          collections_to_test: ${{ env.source_dir }}
          total_jobs: 3
          base_ref: main

      - name: Display targets
        run: |
          echo "test_targets=${{ steps.splitter.outputs.test_targets }}"
          echo "test_targets_json=${{ steps.splitter.outputs.test_targets_json }}"
          echo "test_jobs=${{ steps.splitter.outputs.test_jobs }}"
        shell: bash
  run:
    runs-on: ubuntu-latest
    needs:
      - test_splitter
    strategy:
      fail-fast: false
      matrix:
        workflow-id: ${{ fromJson(needs.test_splitter.outputs.test_jobs) }}
    name: "run-${{ matrix.workflow-id }}"
    steps:
      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Read target
        id: read-targets
        run: |
          pip install -U jq
          echo '${{ needs.test_splitter.outputs.test_targets_json }}' | jq '.${{ matrix.workflow-id }}'
        shell: bash