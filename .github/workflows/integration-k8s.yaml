name: Integration kubernetes.core
on:
  workflow_dispatch:
    inputs:
      repository:
        description: The repository
        default: abikouo/kubernetes.core
        type: string
      branch:
        description: The branch to checkout
        type: string
      test_targets:
        description: the list of targets to test
        type: string
        required: true

jobs:
  splitter:
    runs-on: ubuntu-latest
    outputs:
      all_targets: ${{ steps.split.outputs.all_targets }}
    steps:
      - name: Read target
        id: split
        run: |
          import json, os
          all_targets = list(os.environ.get("ALL_TARGETS").split(","))
          with open(os.environ.get('GITHUB_OUTPUT'), "a", encoding="utf-8") as fh:
              fh.write(f"all_targets={json.dumps(all_targets)}\n")
        shell: python
        env:
          ALL_TARGETS: ${{ inputs.test_targets }}
  integration:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs:
      - splitter
    env:
      source: "./source"
      cloud_common: "./cloudcommon"
      ansible_posix: "./ansible_posix"
      community_general: "./community_general"
      python_version: '3.12'
    strategy:
      fail-fast: false
      matrix:
        ansible_test_target: ${{ fromJson(needs.splitter.outputs.all_targets) }}
    name: "integration-fallible-${{ matrix.ansible_test_target }}"
    steps:
      - name: Set up Python ${{ env.python_version }}
        uses: actions/setup-python@v4
        with:
          python-version: '${{ env.python_version }}'

      - name: Install ansible (fallible)
        run: pip3 install --upgrade 'fallible[compat]'
        shell: bash

      - name: Checkout kubernetes.core repository
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repository }}
          path: ${{ env.source }}
          ref: ${{ inputs.branch }}

      - name: identify collection
        id: identify
        uses: ansible-network/github_actions/.github/actions/identify_collection@main
        with:
          source_path: ${{ env.source }}

      - name: Build collection
        run: ansible-galaxy collection build -vvv
        shell: bash
        working-directory: ${{ env.source }}

      - name: Install collection and dependencies (with --pre flag)
        run: ansible-galaxy collection install ./${{ steps.identify.outputs.tar_file }} --pre -p /home/runner/collections
        shell: bash
        working-directory: ${{ env.source }}

      - name: Disable selinux with selinux_please_lie_to_me
        run: |
          python3 -m pip install wheel --upgrade
          python3 -m pip uninstall -y selinux
          python3 -m pip install selinux_please_lie_to_me
          python3 -m pip install -r requirements.txt -r test-requirements.txt
        shell: bash
        working-directory: ${{ env.source }}

      - name: create kubernetes cluster
        uses: helm/kind-action@v1.8.0
        with:
          node_image: "kindest/node:v1.29.2"

      # Install collection dependencies
      - name: install cloud.common collection
        uses: ansible-network/github_actions/.github/actions/build_install_collection@main
        with:
          install_python_dependencies: true
          source_path: ${{ env.cloud_common }}

      - name: install ansible.posix collection
        uses: ansible-network/github_actions/.github/actions/build_install_collection@main
        with:
          install_python_dependencies: true
          source_path: ${{ env.ansible_posix }}

      - name: install community.general collection
        uses: ansible-network/github_actions/.github/actions/build_install_collection@main
        with:
          install_python_dependencies: false
          source_path: ${{ env.community_general }}

      - name: Ensure ansible-test version
        run: ansible-test --version
        shell: bash

      - name: Run integration tests
        run: >-
          fallible-test integration
          --diff
          --no-temp-workdir
          --color
          --skip-tags False
          --python 3.12
          ${{ matrix.ansible_test_target }}
          -v
        shell: bash
        working-directory: /home/runner/collections/ansible_collections/kubernetes/core
        env:
          ENABLE_TURBO_MODE: false
