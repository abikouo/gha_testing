name: Integration

on:
  workflow_dispatch:
    inputs:
      ansible_test_targets:
        description: ansible test targets to test
        required: true
      ansible_collection:
        description: The collection to run target from
        required: true
        type: choice
        options:
          - community.aws
          - amazon.aws
        default: community.aws

jobs:
  integration:
    env:
      test_targets: ${{ inputs.ansible_test_targets }}
      source: "./source"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ansible-version:
          - milestone
        python-version:
          - "3.9"
    name: "integration-py${{ matrix.python-version }}-${{ matrix.ansible-version }}"
    steps:
      - name: Read ansible-test targets
        id: read-targets
        run: echo "ansible_collection_to_test=${{ inputs.ansible_collection }}" >> $GITHUB_OUTPUT

      # install ansible
      - name: Install ansible-core (${{ matrix.ansible-version }})
        run: python3 -m pip install https://github.com/ansible/ansible/archive/${{ matrix.ansible-version }}.tar.gz --disable-pip-version-check

      # install community.aws collection
      - name: Checkout the collection repository
        uses: ansible-network/github_actions/.github/actions/checkout_dependency@main
        with:
          repository: ansible-collections/community.aws
          path: ${{ env.source }}
          ref: main

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Pre install collections dependencies first so the collection install does not
        run: ansible-galaxy collection install --pre '-r ${{ env.source }}/tests/integration/requirements.yml' -p /home/runner/collections/

      - name: Read collection metadata from galaxy.yml
        id: identify
        uses: ansible-network/github_actions/.github/actions/identify_collection@main
        with:
          source_path: ${{ env.source }}

      - name: Build and install the collection
        id: install
        uses: ansible-network/github_actions/.github/actions/build_install_collection@main
        with:
          install_python_dependencies: true
          source_path: ${{ env.source }}
          collection_path: ${{ steps.identify.outputs.collection_path }}
          tar_file: ${{ steps.identify.outputs.tar_file }}
          ansible_version: ${{ matrix.ansible-version }}

      # Determines path to the collection being tested
      - name: Determines path to the collection being tested
        id: collection-path
        run: |
          if [ "${COLLECTION_TO_TEST}" == "amazon.aws" ]; then
            echo "path=${AMAZON_COLLECTION_PATH}" >> $GITHUB_OUTPUT
          else
            echo "path=${COMMUNITY_COLLECTION_PATH}" >> $GITHUB_OUTPUT
          fi
        env:
          COLLECTION_TO_TEST: ${{ steps.read-targets.outputs.ansible_collection_to_test }}
          AMAZON_COLLECTION_PATH: /home/runner/collections/ansible_collections/amazon/aws/
          COMMUNITY_COLLECTION_PATH: ${{ steps.install.outputs.collection_path }}

      - name: Create AWS/sts session credentials
        uses: ansible-network/github_actions/.github/actions/ansible_aws_test_provider@main
        with:
          collection_path: ${{ steps.collection-path.outputs.path }}
          ansible_core_ci_key: ${{ secrets.ANSIBLE_CORE_CI_KEY }}

      - name: Run integration tests
        uses: ansible-network/github_actions/.github/actions/ansible_test_integration@main
        with:
          collection_path: ${{ steps.collection-path.outputs.path }}
          python_version: ${{ matrix.python-version }}
          ansible_version: ${{ matrix.ansible-version }}
          ansible_test_requirement_files: |
            requirements.txt
            test-requirements.txt
            tests/integration/requirements.txt
          ansible_test_constraint_files: tests/integration/constraints.txt
          ansible_test_targets: ${{ steps.read-targets.outputs.ansible_test_targets }}