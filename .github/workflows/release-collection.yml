---
name: Release collection

concurrency:
  group: '${{ github.workflow }} @ ${{ github.sha }}'
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      repository:
        description: "The repository name. e.g: 'ansible-collections/amazon.cloud'"
        required: true
      version:
        description: "The version to release. e.g: '5.0.1'"
        required: true
    secrets:
      GH_TOKEN:
        description: "The Github token to use."
        required: true
      

jobs:
  create:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repository }}
          fetch-depth: "0"

      - name: Validate version format
        run: |-
          python -c "import os, re, sys;
          version=os.environ.get('RELEASE_VERSION');
          print('version <%s> is matching expecting format' % version) if re.match(r'^[0-9]+\.[0-9]+\.[0-9]+$', version) else sys.exit(1)"
        shell: bash
        env:
          RELEASE_VERSION: ${{ inputs.version }}

      - name: Create release branch on Github repository
        id: create-branch
        run: |
          R_BRANCH="stable-$(echo ${RELEASE_VERSION} | cut -d '.' -f1)"
          D_BRANCH=$(git remote show origin | sed -n '/HEAD branch/s/.*: //p')
          echo "release_branch=$R_BRANCH" >> $GITHUB_OUTPUT
          git checkout $D_BRANCH
          git checkout -b $R_BRANCH && git push origin $R_BRANCH || git checkout $R_BRANCH
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          RELEASE_VERSION: ${{ inputs.version }}

      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install required python modules
        run: pip3 install tox yq
        shell: bash

      - name: Prepare release
        run: tox -e prepare_release -vv
        shell: bash
        env:
          RELEASE_VERSION: ${{ inputs.version }}

      - name: Update galaxy.yml file
        run: yq -yi ".version = \"$RELEASE_VERSION\"" galaxy.yml
        shell: bash
        env:
          RELEASE_VERSION: ${{ inputs.version }}

      - name: Create PR for changelog
        run: |
          git config user.name "Ansible Bot"
          git config user.email devtools@ansible.com
          git add -A
          git commit -m "Release ${{ inputs.version }}"
          git push origin ${{ env.RELEASE_BRANCH }}
        env:
          RELEASE_BRANCH: "${{ steps.create-branch.outputs.release_branch }}"
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          BRANCH_NAME: chore-${{ github.workflow }}-${{ github.run_number }}